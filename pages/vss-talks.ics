BEGIN:VCALENDAR
VERSION:2.0
PRODID:-//alvg calendar generator//PL related talks//EN
REFRESH-INTERVAL;VALUE=DURATION:PT4H
X-WR-CALNAME:VSS Talks
BEGIN:VEVENT
SUMMARY:VSS - Verification of Concurrent Programs under Release Acquire --
  Part II          (see the video of part I here)
DTSTART;TZID=Asia/Calcutta:20230207T190000
DTEND;TZID=Asia/Calcutta:20230207T203000
UID:2023-02@vss-iarcs
DESCRIPTION:Meeting Details: Zoom link\, ID: 891 6409 4870\, Passcode: 082
 194\n\n Talk-Webpage: https://fmindia.cmi.ac.in/vss/\n\n\n\nhttps://us02we
 b.zoom.us/j/89164094870?pwd=eUFNRWp0bHYxRVpwVVNoVUdHU0djQT09\n\nTitle: Ver
 ification of Concurrent Programs under Release Acquire -- Part II    
       (see the video of part I here)\n\nSpeaker: Krishna S\n\nAbstra
 ct: This talk (part I and part II) is an overview of some recent work on t
 he verification of concurrent programs. Traditionally concurrent programs 
 are interpreted under sequential consistency (SC). Eventhough SC is very i
 ntuitive and easy to use\, modern multiprocessors do not employ SC for per
 formance reasons\, and instead use so called "weak memory models". Some of
  the well known weak memory models in vogue among modern multiprocessor ar
 chitectures are Intel x-86\, IBM POWER and ARM. The use of weak memory is 
 also prevalent in the C11 model\, leading to the release acquire fragment 
 of C11. This talk is on the verification of concurrent programs under the 
 release acquire (RA) semantics. The main focus of the talk will be on non 
 parameterized programs under RA\, and I will briefly discuss results in th
 e parameterized setting. In the non parameterized setting\, we show that t
 he reachability problem for RA is undecidable even in the case where the i
 nput program is finite-state\, closing a long standing open problem. What 
 works well for this class is under approximate reachability\, in the form 
 of bounded view switching\, an analogue of bounded context switching\, rel
 evant to RA. In the parameterized setting\, the first observation is that 
 the semantics of RA can be simplified\, lending to a better complexity for
  verification. Further\, safety verification is PSPACE-complete for the ca
 se where the distinguished threads are loop-free\, and jumps to NEXPTIME-c
 omplete for the setting where an unrestricted distinguished ego thread int
 eracts with the environment threads. This talk is based on papers that app
 eared in PLDI'19 (joint with Parosh Abdulla\, Mohamed Faouzi Atig and Jati
 n Arora)\, PODC'22 (joint with Roland Meyer\, Adwait Godbole and Soham Cha
 kraborty)\, and Arxiv'21 (with Roland Meyer and Adwait Godbole).
LOCATION:https://us02web.zoom.us/j/89164094870?pwd=eUFNRWp0bHYxRVpwVVNoVUd
 HU0djQT09
ORGANIZER:MAILTO:vss
PRIORITY:5
END:VEVENT
END:VCALENDAR
